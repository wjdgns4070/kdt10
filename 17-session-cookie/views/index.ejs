<!-- views/index.ejs -->

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>실습</title>

    <!-- bootstrap cdn -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi" crossorigin="anonymous" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3"
        crossorigin="anonymous"></script>

    <!-- axios cdn -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>

<body>
    <h1>실습. Cookie 연습</h1>

    <form id="loginForm">
        <label for="username">아이디:</label>
        <input type="text" id="username" name="username" />
        <br />
        <label for="password">비밀번호:</label>
        <input type="password" id="password" name="password" />
        <br />
        <button type="button" onclick="login();">로그인</button>
    </form>

    <div id="logoutForm" style="display: none;">
        <p id="loggedInUser"></p>
        <button type="button" onclick="logout();">로그아웃</button>
    </div>

    <div id="registerForm" style="display: none;">
        <button type="button" onclick="register();">회원가입</button>
    </div>

    <!-- (기존 코드는 여기에 위치) -->
<!-- views/index.ejs -->

<!-- ... (기존 코드) ... -->

<script>
    // 로그인 상태 확인
    function checkLoginStatus() {
        const loggedInUser = getCookie('loggedInUser');
        if (loggedInUser) {
            // 로그인 상태
            document.getElementById('loggedInUser').innerText = `안녕하세요! ${loggedInUser} 님`;
            document.getElementById('loginForm').style.display = 'none';
            logoutForm.style.display = 'block';
            registerForm.style.display = 'none';

            // result 페이지 렌더링
            renderResultPage();
        } else {
            // 로그아웃 상태
            document.getElementById('loginForm').style.display = 'block';
            logoutForm.style.display = 'none';
            registerForm.style.display = 'block';
        }
    }

    // 페이지 로드 시 로그인 상태 확인
    document.addEventListener('DOMContentLoaded', checkLoginStatus);

    // 로그인
    function login() {
        const username = document.getElementById('username').value;
        const password = document.getElementById('password').value;

        // 간단한 유효성 검사
        if (!username || !password) {
            alert('아이디와 비밀번호를 입력하세요.');
            return;
        }

        // 저장된 쿠키 정보 가져오기
        const storedUsername = getCookie('loggedInUser');

        if (storedUsername && storedUsername === username) {
            // 로그인 성공 시
            checkLoginStatus();
        } else {
            // 로그인 실패 시
            alert('아이디와 비밀번호를 확인하세요.');
        }
    }

    // 로그아웃
    function logout() {
        
        checkLoginStatus();
    }

    // 회원가입
    function register() {
        const username = document.getElementById('username').value;
        const password = document.getElementById('password').value;

        // 간단한 유효성 검사
        if (!username || !password) {
            alert('아이디와 비밀번호를 입력하세요.');
            return;
        }

        // 회원가입 성공 시
        setCookie('loggedInUser', username, 365); // 쿠키 유효 기간: 365일
        checkLoginStatus();
    }

    // 쿠키 설정 함수
    function setCookie(name, value, days) {
        const date = new Date();
        date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);
        const expires = 'expires=' + date.toUTCString();
        document.cookie = name + '=' + value + '; ' + expires + '; path=/';
    }

    // 쿠키 가져오기 함수
    function getCookie(name) {
        const cookieName = name + '=';
        const decodedCookie = decodeURIComponent(document.cookie);
        const cookieArray = decodedCookie.split(';');

        for (let i = 0; i < cookieArray.length; i++) {
            let cookie = cookieArray[i];
            while (cookie.charAt(0) === ' ') {
                cookie = cookie.substring(1);
            }
            if (cookie.indexOf(cookieName) === 0) {
                return cookie.substring(cookieName.length, cookie.length);
            }
        }
        return '';
    }

    // result 페이지 렌더링
    function renderResultPage() {
        const resultContent = document.getElementById('resultContent');
        axios.get('/result') // 서버에서 result.ejs를 렌더링
            .then(response => {
                resultContent.innerHTML = response.data;
            })
            .catch(error => {
                console.error('Error rendering result page:', error);
            });
    }
</script>

<!-- ... (기존 코드) ... -->


</body>

</html>
